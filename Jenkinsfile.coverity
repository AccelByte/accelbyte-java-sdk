library(
  identifier: 'jenkins-shared-library@master',
  retriever: modernSCM(
    [
      $class: 'GitSCMSource',
      remote: 'https://github.com/dhanarab/jenkins-pipeline-library.git'
    ]
  )
)

pipeline {
  agent {
    label "justice-codegen-sdk"
  }
  stages {
    stage('Coverity') {
      agent {
        docker {
          image 'rbs1518/cov-analysis:2022.6-java'
          reuseNode true
        }
      }
      steps {
        script {
          sh "rm -rfv cov-int java-server-sdk.bz2"
          sh "chmod a+x ./gradlew"
          sh "JAVA_OPTS=\"-Xmx1g\" cov-build --dir cov-int ./gradlew clean build -x test --no-daemon"    // https://github.com/gradle/gradle/issues/7746#issuecomment-439582166
          sh "tar caf java-server-sdk.bz2 cov-int"
          withCredentials([usernamePassword(credentialsId: 'coverity-accelbyte-java-sdk', passwordVariable: 'COVERITY_TOKEN', usernameVariable: 'COVERITY_EMAIL')]) {
            gitCommitHashShort = git.getCommitHashShort()
            sh "curl --form token=\$COVERITY_TOKEN --form email=\$COVERITY_EMAIL --form file=@java-server-sdk.bz2 --form version='${gitCommitHashShort}' --form description='Automated Coverity Scan' 'https://scan.coverity.com/builds?project=accelbyte-java-sdk'"
          }
        }
      }
    }
  }
  post {
    //success {
      //script {
        //gitRepositoryName = git.getRepositoryName()
        //gitBranchName = sh(script: "echo ${env.GIT_BRANCH} | grep -oP '(?<=origin/).+'", returnStdout: true).trim()
        //gitCommitHashShort = git.getCommitHashShort()
        //gitCommitMessage = git.getCommitMessage()
        //
        //message = """
        //    :white_check_mark: <${env.BUILD_URL}|${env.JOB_NAME}-${env.BUILD_NUMBER}> *updated*
        //    
        //    |*${gitRepositoryName}:*
        //    |`${gitBranchName}` `${gitCommitHashShort}` 
        //    |${gitCommitMessage}
        //    
        //    |""".stripMargin()
        //slackSend(channel: "#activity-justice-server-sdks", color: '#36B37E', message: message)
      //}
    //}
    failure {
      script {
        message = """
            :no_entry: <${env.BUILD_URL}|${env.JOB_NAME}-${env.BUILD_NUMBER}> *failed*
            
            |""".stripMargin()
        slackSend(channel: "#activity-justice-server-sdks", color: '#FF0000', message: message)
      }
    }
  }
}
